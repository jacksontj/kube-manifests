#!/bin/sh

set -e

mydir=${0%/*}

verb="$1"  # create/update/delete/replace
file="$2"
shift 2

case "$verb" in
    delete) args="" ;;
    update) verb="apply"; args="--overwrite --record" ;;
    *) args="--record" ;;
esac

# This is a simple check to ensure we do not deploy files in the wrong
# cluster. Unfortunately it depends on the context name, which is arbitrary, but
# we rely on the context names we give people when giving credentials, and on the
# context names automatically generated by the gcloud tool.

# This would be "g" when deploying a google cluster, "two" otherwise
cluster_type=$(echo $file | cut -d '.' -f 1)

if [ "$cluster_type" = "g" ];
then
  # GKE
  # Expects contexts to be called "gke_gce-project-name_zone_env"
  # Example: gke_bitnami-platform_europe-west1-b_dev
  current_context=$(kubectl config current-context | cut -d '_' -f 4 | sed 's/\-admin//g' -)
  destination_cluster=$(echo $file | cut -d '.' -f 2)
else
  # AWS
  # Expects contexts to be called "username-cluster"
  # Example: crodriguez-one.k8s.dev.bitnami.net
  current_context=$(kubectl config current-context | cut -d '-' -f 2)
  destination_cluster=$(echo $file | cut -d '/' -f 1)
fi

if [ "$current_context" != "$destination_cluster" ];
then
  echo "Aborting! Different destination and kubectl context clusters!"
  exit 1
fi

exec jsonnet \
    -J $mydir/../lib \
    "$file" \
    $@ | kubectl $verb -f -
